# Production Docker Compose Configuration
# Production Docker Compose Configuration

version: '3.8'

services:
  # Database service
  postgres:
    image: postgis/postgis:13-3.1-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-openwisp}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # InfluxDB time series database
  influxdb:
    image: influxdb:1.8-alpine
    environment:
      INFLUXDB_DB: ${INFLUXDB_NAME}
      INFLUXDB_USER: ${INFLUXDB_USER}
      INFLUXDB_USER_PASSWORD: ${INFLUXDB_PASS}
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASS:-admin}
    volumes:
      - influxdb_data:/var/lib/influxdb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "influx", "-execute", "SHOW DATABASES"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Dashboard service
  dashboard:
    build:
      context: ./images
      dockerfile: openwisp_dashboard/Dockerfile
    env_file:
      - .env
    volumes:
      - static_files:/opt/openwisp/static
      - media_files:/opt/openwisp/media
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 60s
      timeout: 30s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # API service
  api:
    build:
      context: ./images
      dockerfile: openwisp_api/Dockerfile
    env_file:
      - .env
    volumes:
      - static_files:/opt/openwisp/static
      - media_files:/opt/openwisp/media
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 60s
      timeout: 30s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # WebSocket service
  websocket:
    build:
      context: ./images
      dockerfile: openwisp_websocket/Dockerfile
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx reverse proxy
  nginx:
    build:
      context: ./images
      dockerfile: openwisp_nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Health check endpoint
    volumes:
      - static_files:/opt/openwisp/static:ro
      - media_files:/opt/openwisp/media:ro
      - nginx_logs:/var/log/nginx
      - ./images/openwisp_nginx/production_entrypoint.sh:/usr/local/bin/entrypoint.sh:ro
    depends_on:
      - dashboard
      - api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Celery worker process
  celery:
    build:
      context: ./images
      dockerfile: openwisp_dashboard/Dockerfile
    env_file:
      - .env
    command: celery -A openwisp worker --loglevel=info --concurrency=2
    volumes:
      - media_files:/opt/openwisp/media
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Celery scheduler
  celerybeat:
    build:
      context: ./images
      dockerfile: openwisp_dashboard/Dockerfile
    env_file:
      - .env
    command: celery -A openwisp beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - media_files:/opt/openwisp/media
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Mail service
  postfix:
    build:
      context: ./images
      dockerfile: openwisp_postfix/Dockerfile
    env_file:
      - .env
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  influxdb_data:
    driver: local
  static_files:
    driver: local
  media_files:
    driver: local
  nginx_logs:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16