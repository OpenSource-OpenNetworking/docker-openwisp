x-celery-depends-on: &celery-depends-on
  depends_on:
    openwisp-base:
      condition: service_started
    postgres:
      condition: service_started
    redis:
      condition: service_started
    dashboard:
      condition: service_started

services:
  openwisp-base:
    image: docker-openwisp-gmail-openwisp-base:latest
    build:
      context: images
      dockerfile: openwisp_base/Dockerfile
    platform: linux/arm64

  dashboard:
    image: docker-openwisp-gmail-openwisp-dashboard:latest
    restart: always
    build:
      context: images
      dockerfile: openwisp_dashboard/Dockerfile
    platform: linux/arm64
    env_file:
      - .env
    volumes:
      - openwisp_static:/opt/openwisp/static
      - openwisp_media:/opt/openwisp/media
      - openwisp_private_storage:/opt/openwisp/private
      - openwisp_ssh:/home/openwisp/.ssh
      - influxdb_data:/var/lib/influxdb
      - ./customization/configuration/django/:/opt/openwisp/openwisp/configuration:ro
    depends_on:
      - openwisp-base
      - postgres
      - redis
      - postfix
      - influxdb

  api:
    image: docker-openwisp-gmail-openwisp-api:latest
    restart: always
    build:
      context: images
      dockerfile: openwisp_api/Dockerfile
    platform: linux/arm64
    env_file:
      - .env
    volumes:
      - influxdb_data:/var/lib/influxdb
      - openwisp_media:/opt/openwisp/media
      - openwisp_private_storage:/opt/openwisp/private
      - ./customization/configuration/django/:/opt/openwisp/openwisp/configuration:ro
    depends_on:
      - openwisp-base
      - postgres
      - redis
      - dashboard

  websocket:
    image: docker-openwisp-gmail-openwisp-websocket:latest
    restart: always
    build:
      context: images
      dockerfile: openwisp_websocket/Dockerfile
    platform: linux/arm64
    env_file:
      - .env
    volumes:
      - ./customization/configuration/django/:/opt/openwisp/openwisp/configuration:ro
    networks:
      default:
        aliases:
          - websocket
    depends_on:
      - openwisp-base
      - dashboard

  celery:
    image: docker-openwisp-gmail-openwisp-dashboard:latest
    restart: always
    platform: linux/arm64
    environment:
      - MODULE_NAME=celery
    volumes:
      - openwisp_media:/opt/openwisp/media
      - openwisp_private_storage:/opt/openwisp/private
      - openwisp_ssh:/home/openwisp/.ssh
      - ./customization/configuration/django/:/opt/openwisp/openwisp/configuration:ro
    env_file:
      - .env
    <<: *celery-depends-on
    network_mode: "service:openvpn"

  celery_monitoring:
    image: docker-openwisp-gmail-openwisp-dashboard:latest
    restart: always
    platform: linux/arm64
    environment:
      - MODULE_NAME=celery_monitoring
    volumes:
      - openwisp_media:/opt/openwisp/media
      - openwisp_private_storage:/opt/openwisp/private
      - ./customization/configuration/django/:/opt/openwisp/openwisp/configuration:ro
    env_file:
      - .env
    <<: *celery-depends-on
    network_mode: "service:openvpn"

  openwisp-network-topology:
    image: docker-openwisp-gmail-openwisp-dashboard:latest
    restart: always
    platform: linux/arm64
    environment:
      - MODULE_NAME=network_topology
    volumes:
      - openwisp_media:/opt/openwisp/media
      - openwisp_private_storage:/opt/openwisp/private
      - openwisp_ssh:/home/openwisp/.ssh
      - ./customization/configuration/django/:/opt/openwisp/openwisp/configuration:ro
    env_file:
      - .env
    <<: *celery-depends-on
    network_mode: "service:openvpn"

  celerybeat:
    image: docker-openwisp-gmail-openwisp-dashboard:latest
    restart: always
    platform: linux/arm64
    environment:
      - MODULE_NAME=celerybeat
    env_file:
      - .env
    volumes:
      - ./customization/configuration/django/:/opt/openwisp/openwisp/configuration:ro
    depends_on:
      - openwisp-base
      - postgres
      - redis
      - dashboard

  nginx:
    image: docker-openwisp-gmail-openwisp-nginx:latest
    restart: always
    build:
      context: images
      dockerfile: openwisp_nginx/Dockerfile
    platform: linux/arm64
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    env_file:
      - .env
    volumes:
      - openwisp_static:/opt/openwisp/public/static:ro
      - openwisp_media:/opt/openwisp/public/media:ro
      - openwisp_private_storage:/opt/openwisp/public/private:ro
      - openwisp_certs:/etc/letsencrypt
      - ./customization/theme:/opt/openwisp/public/custom:ro
    networks:
      default:
        aliases:
         - dashboard.internal
         - api.internal
         - network-topology.internal
         - websocket.internal
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - dashboard
      - api
      - websocket

  freeradius:
    image: docker-openwisp-gmail-openwisp-freeradius:latest
    restart: always
    build:
      context: images
      dockerfile: openwisp_freeradius/Dockerfile
    platform: linux/arm64
    env_file:
      - .env
    ports:
      - "1812:1812/udp"
      - "1813:1813/udp"
    depends_on:
      - openwisp-base
      - postgres
      - api
      - dashboard

  postfix:
    image: docker-openwisp-gmail-openwisp-postfix:latest
    restart: always
    build:
      context: images
      dockerfile: openwisp_postfix/Dockerfile
    platform: linux/arm64
    env_file:
      - .env
    volumes:
      - openwisp_certs:/etc/ssl/mail

  openvpn:
    image: docker-openwisp-gmail-openwisp-openvpn:latest
    restart: always
    build:
      context: images
      dockerfile: openwisp_openvpn/Dockerfile
    platform: linux/arm64
    ports:
      - "1194:1194/udp"
    env_file:
      - .env
    depends_on:
      - openwisp-base
      - postgres
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    healthcheck:
      test: ["CMD", "pgrep", "-f", "openvpn"]
      interval: 30s
      timeout: 10s
      retries: 30
      start_period: 90s

  postgres:
    image: kartoza/postgis:15-3.4
    restart: always
    platform: linux/arm64
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASS=${DB_PASS}
      - POSTGRES_DBNAME=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  influxdb:
    image: influxdb:1.8
    restart: always
    platform: linux/arm64
    environment:
      - INFLUXDB_DB=$INFLUXDB_NAME
      - INFLUXDB_USER=$INFLUXDB_USER
      - INFLUXDB_USER_PASSWORD=$INFLUXDB_PASS
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=$INFLUXDB_PASS
      - INFLUXDB_HTTP_AUTH_ENABLED=true
    volumes:
      - influxdb_data:/var/lib/influxdb
    ports:
      - "8086:8086"

  redis:
    image: redis:alpine
    restart: always
    platform: linux/arm64
    volumes:
      - redis_data:/data

volumes:
  influxdb_data: {}
  postgres_data: {}
  redis_data: {}
  openwisp_certs: {}
  openwisp_ssh: {}
  openwisp_media: {}
  openwisp_static: {}
  openwisp_private_storage: {}

networks:
  default:
    name: openwisp-network
    ipam:
      config:
        - subnet: 172.22.0.0/24
