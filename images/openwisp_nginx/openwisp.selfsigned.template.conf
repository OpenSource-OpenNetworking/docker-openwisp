# Nginx server - Openwisp SSL (Self-signed)

server {
    listen 443 ssl $NGINX_HTTP2;
    $NGINX_IP6_STRING
    server_name $DOMAIN;
    root /opt/openwisp/public/;
    index index.html index.htm;

    client_max_body_size ${NGINX_CLIENT_BODY_SIZE}M;

    # SSL configurations (self-signed)
    ssl_certificate      /etc/nginx/ssl/cert.pem;
    ssl_certificate_key  /etc/nginx/ssl/key.pem;
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    # generated 2022-02-02, Mozilla Guideline v5.6, nginx 1.17.7, OpenSSL 1.1.1k, intermediate configuration
    # https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1k&guideline=5.6
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "same-origin" always;

    # Nginx configurations
    server_tokens off;
    $NGINX_SSL_CONFIG

    # Allow any origin with credentials
    add_header Access-Control-Allow-Origin "$http_origin" always;
    add_header Access-Control-Allow-Credentials true always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With" always;

    # Handle preflight requests
    location = /options {
        if (\$request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "\$http_origin" always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With" always;
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type text/plain;
            add_header Content-Length 0;
            return 204;
        }
    }

    location /static/ {
        alias /opt/openwisp/public/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    location /media/ {
        alias /opt/openwisp/public/media/;
        expires 7d;
    }

    location /private/ {
        internal;
        alias /opt/openwisp/public/private/;
    }

    location / {
        proxy_set_header X-Real-IP $NINGX_REAL_REMOTE_ADDR;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://$APP_SERVICE:$APP_PORT;
        proxy_read_timeout 600;
        client_max_body_size ${NGINX_CLIENT_BODY_SIZE}M;
        proxy_request_buffering off;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    gzip on;
    gzip_vary $NGINX_GZIP_SWITCH;
    gzip_proxied $NGINX_GZIP_PROXIED;
    gzip_comp_level $NGINX_GZIP_LEVEL;
    gzip_min_length $NGINX_GZIP_MIN_LENGTH;
    gzip_types $NGINX_GZIP_TYPES;
}